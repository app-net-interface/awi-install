apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-proxy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 9901

    static_resources:
      listeners:
        - name: awi_listener
          address:
            socket_address:
              address: "::"
              port_value: {{ .Values.configs.envoyProxy.targetPort }}
              ipv4_compat: true
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/grpc/AppConnectionController/" }
                              route:
                                cluster: controller_cluster
                                prefix_rewrite: "/AppConnectionController/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/NetworkSLAService/" }
                              route:
                                cluster: controller_cluster
                                prefix_rewrite: "/NetworkSLAService/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/ConnectionController/" }
                              route:
                                cluster: controller_cluster
                                prefix_rewrite: "/ConnectionController/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/Cloud/" }
                              route:
                                cluster: controller_cluster
                                prefix_rewrite: "/Cloud/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/SecurityPolicyService/" }
                              route:
                                cluster: controller_cluster
                                prefix_rewrite: "/SecurityPolicyService/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/infra.CloudProviderService/" }
                              route:
                                cluster: awi_infra_guard_cluster
                                prefix_rewrite: "/infra.CloudProviderService/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/infra.AccessControlService/" }
                              route:
                                cluster: awi_infra_guard_cluster
                                prefix_rewrite: "/infra.AccessControlService/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/grpc/infra.KubernetesService/" }
                              route:
                                cluster: awi_infra_guard_cluster
                                prefix_rewrite: "/infra.KubernetesService/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match: { prefix: "/" }
                              route:
                                cluster: front_end_cluster
                              typed_per_filter_config:
                                envoy.filters.http.grpc_web:
                                  "@type": type.googleapis.com/envoy.config.route.v3.FilterConfig
                                  disabled: true
                                envoy.filters.http.cors:
                                  "@type": type.googleapis.com/envoy.config.route.v3.FilterConfig
                                  disabled: true
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                      - name: envoy.filters.http.cors
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: front_end_cluster
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: front_end
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: awi-ui
                          port_value: {{ .Values.configs.ui.port }}
        - name: controller_cluster
          connect_timeout: 0.25s
          type: logical_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          load_assignment:
            cluster_name: controller
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: awi-grpc-catalyst-sdwan
                          port_value: {{ .Values.configs.awiGrpcCatalystSdwan.port }}
        - name: awi_infra_guard_cluster
          connect_timeout: 0.25s
          type: logical_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          load_assignment:
            cluster_name: awi_infra_guard
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: awi-infra-guard
                          port_value: {{ .Values.configs.awiInfraGuard.port }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-proxy
  template:
    metadata:
      labels:
        app: envoy-proxy
    spec:
      containers:
      - name: envoy-proxy
        image: envoyproxy/envoy:{{ .Values.configs.envoyProxy.tag }}
        volumeMounts:
        - name: config-volume
          mountPath: "/etc/envoy/"
      volumes:
      - name: config-volume
        configMap:
          name: envoy-proxy-config
          items:
          - key: envoy.yaml
            path: envoy.yaml

---

apiVersion: v1
kind: Service
metadata:
  name: envoy-proxy
spec:
  type: LoadBalancer
  selector:
    app: envoy-proxy
  ports:
    - name: envoy-proxy-front
      protocol: TCP
      port: {{ .Values.configs.envoyProxy.port }}
      targetPort: {{ .Values.configs.envoyProxy.targetPort }}
